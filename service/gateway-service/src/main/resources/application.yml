server:
  port: 8500
spring:
  application:
    name: gateway-service
  # 配置允许覆盖bean定义和循环引用
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  cloud:
    nacos:
      discovery:
        # 配置nacos注册中心地址
        server-addr: localhost:8848
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求 allowedOrigins: “*” 允许所有网站
              - "*"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            maxAge: 3600 # 这次跨域检测的有效期
      discovery:
        locator:
          enabled: true # 表明开启gateway服务注册与发现的功能
      # 配置路由，注意这里是个列表，每一项都包含了很多信息
      routes:
        # 验证服务
        - id: auth-service
          uri: lb://spring-security
          predicates:
            - Path=/auth/**
        # 用户服务
        - id: user-service   # 路由名称 自定义 唯一即可
          uri: lb://user-service  # 路由的目标地址  lb（loadBalance）就是负载均衡，后面跟服务名称
          predicates: # 路由规则，断言什么请求会被路由
            # 只要是访问的这个路径，一律都被路由到上面指定的服务
            - Path=/user/**  #如果使用多个路径 用,隔开
        # 消息队列 publisher
        - id: publisher-service
          uri: lb://publisher-service
          predicates:
            - Path=/publish/**